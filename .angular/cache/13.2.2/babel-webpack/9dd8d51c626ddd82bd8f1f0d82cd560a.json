{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'; // Angular Materials\n\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nlet BookFormDialogComponent = class BookFormDialogComponent {\n  constructor(data, bookService, conservationStatusService) {\n    this.data = data;\n    this.bookService = bookService;\n    this.conservationStatusService = conservationStatusService;\n    this.conservationStatuses = [];\n\n    if (this.data) {\n      this.buildFillBookForm();\n    } else {\n      this.buildVoidBookForm();\n    }\n  }\n\n  ngOnInit() {\n    this.getConservationStatuses();\n  }\n\n  getConservationStatuses() {\n    this.conservationStatusService.get().subscribe(response => {\n      this.conservationStatuses = response['data'];\n      console.log(this.conservationStatuses);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  buildVoidBookForm() {\n    this.bookForm = new FormGroup({\n      isbn: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      editorial: new FormControl('', Validators.required),\n      author: new FormControl('', Validators.required),\n      genre: new FormControl('', Validators.required),\n      conservation_status_id: new FormControl('', Validators.required),\n      state_id: new FormControl('', Validators.required)\n    });\n  }\n\n  buildFillBookForm() {\n    let book = this.data;\n    this.bookForm = new FormGroup({\n      isbn: new FormControl(book.isbn, Validators.required),\n      name: new FormControl(book.name, Validators.required),\n      editorial: new FormControl(book.editorial, Validators.required),\n      author: new FormControl(book.author, Validators.required),\n      genre: new FormControl(book.genre, Validators.required),\n      conservation_status_id: new FormControl(book.conservation_status_id, Validators.required),\n      state_id: new FormControl(book.state_id, Validators.required)\n    });\n  }\n\n  saveNewBook() {\n    let newBook = this.bookForm.value;\n    newBook.creation_date = new Date();\n    this.bookService.post(JSON.stringify({\n      book: newBook\n    })).subscribe(response => {\n      this.buildVoidBookForm();\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  saveBook() {\n    let book = this.data;\n    book.isbn = this.bookForm.value['isbn'];\n    book.name = this.bookForm.value['name'];\n    book.editorial = this.bookForm.value['editorial'];\n    book.author = this.bookForm.value['author'];\n    book.genre = this.bookForm.value['genre'];\n    book.conservation_status_id = this.bookForm.value['conversation_status_id'];\n    book.state_id = this.bookForm.value['state_id'];\n    console.log(book); // this.bookService.update(book.id, JSON.stringify({book: book})).subscribe(response => {\n    // }, error => {\n    //   console.error(error);\n    // });\n  }\n\n};\nBookFormDialogComponent = __decorate([Component({\n  selector: 'app-book-form-dialog',\n  templateUrl: './book-form-dialog.component.html',\n  styleUrls: ['./book-form-dialog.component.css']\n}), __param(0, Inject(MAT_DIALOG_DATA))], BookFormDialogComponent);\nexport { BookFormDialogComponent };","map":null,"metadata":{},"sourceType":"module"}